{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "# Set seeds for reproducibility\n",
        "import random\n",
        "random.seed(0)\n",
        "\n",
        "import numpy as np\n",
        "np.random.seed(0)\n",
        "\n",
        "import tensorflow as tf\n",
        "tf.random.set_seed(0)"
      ],
      "metadata": {
        "id": "yJXnjWA2C9wI"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras import datasets, layers, models\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "3LiKjoGWC-YZ"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Load and prepare the Fashion MNIST dataset\n",
        "fashion_mnist = datasets.fashion_mnist\n",
        "(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()"
      ],
      "metadata": {
        "id": "_UNHi30sDOuE"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "type(train_images)\n",
        "type(train_labels)\n",
        "print(len(train_images))\n",
        "print(len(train_labels))\n",
        "print(len(test_images))\n",
        "print(train_images[0].shape)\n",
        "print(type(train_images[0]))\n",
        "print(train_images[0])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hepYDPcODPvg",
        "outputId": "6092ebf7-60d3-4b76-89c1-5079b6490c17"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "60000\n",
            "60000\n",
            "10000\n",
            "(28, 28)\n",
            "<class 'numpy.ndarray'>\n",
            "[[  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n",
            "    0   0   0   0   0   0   0   0   0   0]\n",
            " [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n",
            "    0   0   0   0   0   0   0   0   0   0]\n",
            " [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n",
            "    0   0   0   0   0   0   0   0   0   0]\n",
            " [  0   0   0   0   0   0   0   0   0   0   0   0   1   0   0  13  73   0\n",
            "    0   1   4   0   0   0   0   1   1   0]\n",
            " [  0   0   0   0   0   0   0   0   0   0   0   0   3   0  36 136 127  62\n",
            "   54   0   0   0   1   3   4   0   0   3]\n",
            " [  0   0   0   0   0   0   0   0   0   0   0   0   6   0 102 204 176 134\n",
            "  144 123  23   0   0   0   0  12  10   0]\n",
            " [  0   0   0   0   0   0   0   0   0   0   0   0   0   0 155 236 207 178\n",
            "  107 156 161 109  64  23  77 130  72  15]\n",
            " [  0   0   0   0   0   0   0   0   0   0   0   1   0  69 207 223 218 216\n",
            "  216 163 127 121 122 146 141  88 172  66]\n",
            " [  0   0   0   0   0   0   0   0   0   1   1   1   0 200 232 232 233 229\n",
            "  223 223 215 213 164 127 123 196 229   0]\n",
            " [  0   0   0   0   0   0   0   0   0   0   0   0   0 183 225 216 223 228\n",
            "  235 227 224 222 224 221 223 245 173   0]\n",
            " [  0   0   0   0   0   0   0   0   0   0   0   0   0 193 228 218 213 198\n",
            "  180 212 210 211 213 223 220 243 202   0]\n",
            " [  0   0   0   0   0   0   0   0   0   1   3   0  12 219 220 212 218 192\n",
            "  169 227 208 218 224 212 226 197 209  52]\n",
            " [  0   0   0   0   0   0   0   0   0   0   6   0  99 244 222 220 218 203\n",
            "  198 221 215 213 222 220 245 119 167  56]\n",
            " [  0   0   0   0   0   0   0   0   0   4   0   0  55 236 228 230 228 240\n",
            "  232 213 218 223 234 217 217 209  92   0]\n",
            " [  0   0   1   4   6   7   2   0   0   0   0   0 237 226 217 223 222 219\n",
            "  222 221 216 223 229 215 218 255  77   0]\n",
            " [  0   3   0   0   0   0   0   0   0  62 145 204 228 207 213 221 218 208\n",
            "  211 218 224 223 219 215 224 244 159   0]\n",
            " [  0   0   0   0  18  44  82 107 189 228 220 222 217 226 200 205 211 230\n",
            "  224 234 176 188 250 248 233 238 215   0]\n",
            " [  0  57 187 208 224 221 224 208 204 214 208 209 200 159 245 193 206 223\n",
            "  255 255 221 234 221 211 220 232 246   0]\n",
            " [  3 202 228 224 221 211 211 214 205 205 205 220 240  80 150 255 229 221\n",
            "  188 154 191 210 204 209 222 228 225   0]\n",
            " [ 98 233 198 210 222 229 229 234 249 220 194 215 217 241  65  73 106 117\n",
            "  168 219 221 215 217 223 223 224 229  29]\n",
            " [ 75 204 212 204 193 205 211 225 216 185 197 206 198 213 240 195 227 245\n",
            "  239 223 218 212 209 222 220 221 230  67]\n",
            " [ 48 203 183 194 213 197 185 190 194 192 202 214 219 221 220 236 225 216\n",
            "  199 206 186 181 177 172 181 205 206 115]\n",
            " [  0 122 219 193 179 171 183 196 204 210 213 207 211 210 200 196 194 191\n",
            "  195 191 198 192 176 156 167 177 210  92]\n",
            " [  0   0  74 189 212 191 175 172 175 181 185 188 189 188 193 198 204 209\n",
            "  210 210 211 188 188 194 192 216 170   0]\n",
            " [  2   0   0   0  66 200 222 237 239 242 246 243 244 221 220 193 191 179\n",
            "  182 182 181 176 166 168  99  58   0   0]\n",
            " [  0   0   0   0   0   0   0  40  61  44  72  41  35   0   0   0   0   0\n",
            "    0   0   0   0   0   0   0   0   0   0]\n",
            " [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n",
            "    0   0   0   0   0   0   0   0   0   0]\n",
            " [  0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n",
            "    0   0   0   0   0   0   0   0   0   0]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display an image from the dataset\n",
        "plt.imshow(train_images[0], cmap='gray')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "Ss-t7EP8DnjW",
        "outputId": "8afacfef-db78-4336-9de7-663ebabeab0e"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(train_labels[0])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1wUgcHEyDzw3",
        "outputId": "d43dbdb5-6142-420e-b326-28e9076762f5"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "9\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Normalize pixel values to be between 0 and 1\n",
        "train_images, test_images = train_images / 255.0, test_images / 255.0"
      ],
      "metadata": {
        "id": "IdvgGx5xD0SE"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Reshape images to specify that it's a single channel (grayscale)\n",
        "train_images = train_images.reshape((train_images.shape[0], 28, 28, 1))\n",
        "test_images = test_images.reshape((test_images.shape[0], 28, 28, 1))"
      ],
      "metadata": {
        "id": "tzj1V58wEFNS"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Build the convolutional base\n",
        "model = models.Sequential()\n",
        "model.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)))\n",
        "model.add(layers.MaxPooling2D((2, 2)))\n",
        "model.add(layers.Conv2D(64, (3, 3), activation='relu'))\n",
        "model.add(layers.MaxPooling2D((2, 2)))\n",
        "model.add(layers.Conv2D(64, (3, 3), activation='relu'))\n",
        "\n",
        "# Add Dense layers on top\n",
        "model.add(layers.Flatten())\n",
        "model.add(layers.Dense(64, activation='relu'))\n",
        "model.add(layers.Dense(10))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VBCWf_EjEdG0",
        "outputId": "304052d7-ff35-4e06-b1d7-923b28d97da8"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
            "  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Compile and train the model\n",
        "model.compile(optimizer='adam',\n",
        "              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n",
        "              metrics=['accuracy'])"
      ],
      "metadata": {
        "id": "mxt4Et97EfF8"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "history = model.fit(train_images, train_labels, epochs=5,\n",
        "                    validation_data=(test_images, test_labels))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "37lyjm0HEhX8",
        "outputId": "772125f1-aa89-44e4-dfe8-1377dc72052c"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/5\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m15s\u001b[0m 6ms/step - accuracy: 0.7495 - loss: 0.6947 - val_accuracy: 0.8702 - val_loss: 0.3604\n",
            "Epoch 2/5\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 4ms/step - accuracy: 0.8779 - loss: 0.3367 - val_accuracy: 0.8812 - val_loss: 0.3285\n",
            "Epoch 3/5\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 4ms/step - accuracy: 0.8965 - loss: 0.2831 - val_accuracy: 0.8923 - val_loss: 0.2987\n",
            "Epoch 4/5\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 4ms/step - accuracy: 0.9095 - loss: 0.2463 - val_accuracy: 0.8956 - val_loss: 0.2879\n",
            "Epoch 5/5\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 4ms/step - accuracy: 0.9191 - loss: 0.2187 - val_accuracy: 0.8976 - val_loss: 0.2853\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Evaluate the model\n",
        "test_loss, test_acc = model.evaluate(test_images,  test_labels, verbose=2)\n",
        "print('\\nTest accuracy:', test_acc)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TNxsU_PPElEi",
        "outputId": "a55a54fd-9dfb-4b2c-d70a-3975c693d77f"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "313/313 - 1s - 3ms/step - accuracy: 0.8976 - loss: 0.2853\n",
            "\n",
            "Test accuracy: 0.897599995136261\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot training & validation accuracy values\n",
        "plt.plot(history.history['accuracy'])\n",
        "plt.plot(history.history['val_accuracy'])\n",
        "plt.title('Model accuracy')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.xlabel('Epoch')\n",
        "plt.legend(['Train', 'Test'], loc='upper left')\n",
        "plt.show()\n",
        "\n",
        "# Plot training & validation loss values\n",
        "plt.plot(history.history['loss'])\n",
        "plt.plot(history.history['val_loss'])\n",
        "plt.title('Model loss')\n",
        "plt.ylabel('Loss')\n",
        "plt.xlabel('Epoch')\n",
        "plt.legend(['Train', 'Test'], loc='upper left')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 927
        },
        "id": "NaA7vFhJEoPc",
        "outputId": "0f7965c5-9efe-45ea-d914-5a83bf48920f"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAj8AAAHHCAYAAABQhTneAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAZeRJREFUeJzt3Xd8VFX+//HXTMqkFwipRBJIICBCkBLBAkgEFBFQv2LZBbH9bKwslsXdFWz7RdRVdFFx2a+gri7YQFcFhAgoiKIUBaX3lkCAdNJm7u+PgYEBAiGT5GaS9/PxuA/Jbfkch5i3555zj8UwDAMRERGRJsJqdgEiIiIi9UnhR0RERJoUhR8RERFpUhR+REREpElR+BEREZEmReFHREREmhSFHxEREWlSFH5ERESkSVH4ERERkSZF4UdEvJ7FYuHJJ5887+t27NiBxWJhxowZZz1v8eLFWCwWFi9eXKP6RKRhUfgRkVoxY8YMLBYLFouFpUuXnnbcMAwSExOxWCxce+21JlQoIuKk8CMitSogIID333//tP1Llixhz5492Gw2E6oSETlB4UdEatU111zDhx9+SGVlpdv+999/n65duxIbG2tSZSIiTgo/IlKrbrnlFg4dOsSCBQtc+8rLy/noo4+49dZbz3hNcXExDz/8MImJidhsNtq1a8eLL76IYRhu55WVlfHHP/6RFi1aEBoaynXXXceePXvOeM+9e/dyxx13EBMTg81m48ILL+Stt96qvYYCH374IV27diUwMJCoqCh+97vfsXfvXrdzsrOzGTVqFC1btsRmsxEXF8eQIUPYsWOH65yffvqJAQMGEBUVRWBgIMnJydxxxx21WquInOBrdgEi0rgkJSXRs2dP/vOf/3D11VcDMHfuXPLz87n55pt59dVX3c43DIPrrruORYsWceedd5Kens78+fN59NFH2bt3Ly+//LLr3Lvuuot///vf3HrrrfTq1Yuvv/6aQYMGnVZDTk4Ol1xyCRaLhQcffJAWLVowd+5c7rzzTgoKChgzZozH7ZwxYwajRo2ie/fuTJw4kZycHF555RWWLVvG6tWriYiIAOCGG27g119/ZfTo0SQlJXHgwAEWLFjArl27XF/379+fFi1aMG7cOCIiItixYweffPKJxzWKSBUMEZFaMH36dAMwfvzxR2PKlClGaGioUVJSYhiGYfzP//yP0bdvX8MwDKNVq1bGoEGDXNfNmTPHAIxnn33W7X433nijYbFYjC1bthiGYRhr1qwxAOP+++93O+/WW281AGPChAmufXfeeacRFxdn5Obmup178803G+Hh4a66tm/fbgDG9OnTz9q2RYsWGYCxaNEiwzAMo7y83IiOjjY6duxoHD161HXe559/bgDG+PHjDcMwjCNHjhiA8cILL1R579mzZ7v+vYlI/dBjLxGpdTfddBNHjx7l888/p7CwkM8//7zKR15ffvklPj4+/OEPf3Db//DDD2MYBnPnznWdB5x23qm9OIZh8PHHHzN48GAMwyA3N9e1DRgwgPz8fFatWuVR+3766ScOHDjA/fffT0BAgGv/oEGDSEtL44svvgAgMDAQf39/Fi9ezJEjR854r+M9RJ9//jkVFRUe1SUi1aPwIyK1rkWLFmRmZvL+++/zySefYLfbufHGG8947s6dO4mPjyc0NNRtf/v27V3Hj//TarXSpk0bt/PatWvn9vXBgwfJy8vjn//8Jy1atHDbRo0aBcCBAwc8at/xmk793gBpaWmu4zabjUmTJjF37lxiYmK44ooreP7558nOznad37t3b2644QaeeuopoqKiGDJkCNOnT6esrMyjGkWkahrzIyJ14tZbb+Xuu+8mOzubq6++2tXDUdccDgcAv/vd7xg5cuQZz+nUqVO91ALOnqnBgwczZ84c5s+fzxNPPMHEiRP5+uuv6dKlCxaLhY8++ojvv/+e//73v8yfP5877riDv//973z//feEhITUW60iTYV6fkSkTgwbNgyr1cr3339f5SMvgFatWrFv3z4KCwvd9m/YsMF1/Pg/HQ4HW7dudTtv48aNbl8fnwlmt9vJzMw84xYdHe1R247XdOr3Pr7v+PHj2rRpw8MPP8xXX33FunXrKC8v5+9//7vbOZdccgl/+9vf+Omnn3jvvff49ddfmTlzpkd1isiZKfyISJ0ICQnhjTfe4Mknn2Tw4MFVnnfNNddgt9uZMmWK2/6XX34Zi8XimjF2/J+nzhabPHmy29c+Pj7ccMMNfPzxx6xbt+6073fw4MGaNMdNt27diI6OZurUqW6Pp+bOncv69etdM9BKSkooLS11u7ZNmzaEhoa6rjty5MhpU/rT09MB9OhLpI7osZeI1JmqHjudbPDgwfTt25e//OUv7Nixg86dO/PVV1/x6aefMmbMGNcYn/T0dG655RZef/118vPz6dWrF1lZWWzZsuW0ez733HMsWrSIjIwM7r77bjp06MDhw4dZtWoVCxcu5PDhwx61y8/Pj0mTJjFq1Ch69+7NLbfc4prqnpSUxB//+EcANm3aRL9+/bjpppvo0KEDvr6+zJ49m5ycHG6++WYA3n77bV5//XWGDRtGmzZtKCwsZNq0aYSFhXHNNdd4VKeInJnCj4iYymq18tlnnzF+/HhmzZrF9OnTSUpK4oUXXuDhhx92O/ett96iRYsWvPfee8yZM4crr7ySL774gsTERLfzYmJiWLFiBU8//TSffPIJr7/+Os2bN+fCCy9k0qRJtVL37bffTlBQEM899xx/+tOfCA4OZtiwYUyaNMk1vikxMZFbbrmFrKws3n33XXx9fUlLS+ODDz7ghhtuAJwDnlesWMHMmTPJyckhPDycHj168N5775GcnFwrtYqIO4txan+riIiISCOmMT8iIiLSpCj8iIiISJOi8CMiIiJNisKPiIiINCkKPyIiItKkKPyIiIhIk6L3/JyBw+Fg3759hIaGYrFYzC5HREREqsEwDAoLC4mPj8dqrbp/R+HnDPbt23faS9NERETEO+zevZuWLVtWedz08PPaa6/xwgsvkJ2dTefOnfnHP/5Bjx49znjujBkzGDVqlNs+m83mtnaOYRhMmDCBadOmkZeXx6WXXsobb7xBampqtWsKDQ0FnP/ywsLCatAqERERqW8FBQUkJia6fo9XxdTwM2vWLMaOHcvUqVPJyMhg8uTJDBgwgI0bN1a56nJYWJjbSsqnPpZ6/vnnefXVV3n77bdJTk7miSeeYMCAAfz2228EBARUq67j9wwLC1P4ERER8TLnGrJi6oDnl156ibvvvptRo0bRoUMHpk6dSlBQEG+99VaV11gsFmJjY11bTEyM65hhGEyePJm//vWvDBkyhE6dOvHOO++wb98+5syZUw8tEhERkYbOtPBTXl7OypUryczMPFGM1UpmZibLly+v8rqioiJatWpFYmIiQ4YM4ddff3Ud2759O9nZ2W73DA8PJyMj46z3LCsro6CgwG0TERGRxsm08JObm4vdbnfruQHnaszZ2dlnvKZdu3a89dZbfPrpp/z73//G4XDQq1cv9uzZA+C67nzuCTBx4kTCw8NdmwY7i4iINF6mD3g+Hz179qRnz56ur3v1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/HNYk/Z528/gHXfcYbRq1crw9/c3WrRoYfTr188VDAzDuz8/wzj/9nnb53cmp4afhvAZWgzDMOquX0lERESkYdGYHxEREWlSFH5ERESkSVH4ERERkSZF4UdERESaFIUfERERaVIUfkRERKRJUfgRERGRJkXhR0SkGiwWC3PmzDG7DBGpBQo/ItLg3X777VgsltO2gQMHml2aiHghreouIl5h4MCBTJ8+3W2fzWYzqRoR8Wbq+RERr2Cz2YiNjXXbIiMjAecjqTfeeIOrr76awMBAWrduzUcffeR2/dq1a7nyyisJDAykefPm3HPPPRQVFbmd89Zbb3HhhRdis9mIi4vjwQcfdDuem5vLsGHDCAoKIjU1lc8++6xuGy0idULhR0QahSeeeIIbbriBn3/+mdtuu42bb76Z9evXA1BcXMyAAQOIjIzkxx9/5MMPP2ThwoVu4eaNN97ggQce4J577mHt2rV89tlnpKSkuH2Pp556iptuuolffvmFa665httuu43Dhw/XaztFpBbU6bKpIiK1YOTIkYaPj48RHBzstv3tb38zDMO52vm9997rdk1GRoZx3333GYZhGP/85z+NyMhIo6ioyHX8iy++MKxWq5GdnW0YhmHEx8cbf/nLX6qsATD++te/ur4uKioyAGPu3Lm11k4RqR8a8yMiXqFv37688cYbbvuaNWvm+nPPnj3djvXs2ZM1a9YAsH79ejp37kxwcLDr+KWXXorD4WDjxo1YLBb27dtHv379zlpDp06dXH8ODg4mLCyMAwcO1LRJImIShR8R8QrBwcGnPYaqLYGBgdU6z8/Pz+1ri8WCw+Goi5JEpA5pzI+INArff//9aV+3b98egPbt2/Pzzz9TXFzsOr5s2TKsVivt2rUjNDSUpKQksrKy6rVmETGHen5ExCuUlZWRnZ3tts/X15eoqCgAPvzwQ7p168Zll13Ge++9x4oVK/i///s/AG677TYmTJjAyJEjefLJJzl48CCjR4/m97//PTExMQA8+eST3HvvvURHR3P11VdTWFjIsmXLGD16dP02VETqnMKPiHiFefPmERcX57avXbt2bNiwAXDOxJo5cyb3338/cXFx/Oc//6FDhw4ABAUFMX/+fB566CG6d+9OUFAQN9xwAy+99JLrXiNHjqS0tJSXX36ZRx55hKioKG688cb6a6CI1BuLYRiG2UWIiHjCYrEwe/Zshg4danYpIuIFNOZHREREmhSFHxEREWlSNOZHRLyent6LyPlQz4+IiIg0KQo/IiIi0qQo/IiIiEiTovAjIiIiTYrCj4iIiDQpCj8iIiLSpCj8iIiISJOi8CMiIiJNisKPiIiINCn/Hzz//s5bPJFJAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.save('trained_fashion_mnist_model.h5')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uSW-oOwdEqn8",
        "outputId": "d2e65e55-201b-437c-ca7c-7ea5c1542e29"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',\n",
        "               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']\n",
        "\n",
        "# Predict and show one test image\n",
        "import random\n",
        "i = random.randint(0, len(test_images)-1)\n",
        "img = test_images[i].reshape(28, 28)\n",
        "predicted_label = np.argmax(model.predict(test_images[i].reshape(1, 28, 28, 1)))\n",
        "\n",
        "plt.imshow(img, cmap='gray')\n",
        "plt.title(f\"Predicted: {class_names[predicted_label]}\\nActual: {class_names[test_labels[i]]}\")\n",
        "plt.axis('off')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "C1YBgR8TE1Mc",
        "outputId": "8da45c3b-4a6e-451b-b719-7cdd09872888"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "files.download('trained_fashion_mnist_model.h5')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "-BOu2QMtE-1O",
        "outputId": "e0fe6727-f376-491f-ce2c-1e0fa357b2ec"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_f06178f8-2ad5-41ca-b4a6-a5f9125e408c\", \"trained_fashion_mnist_model.h5\", 1165592)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "UJMzL46lFdQc"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
